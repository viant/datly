init:
  aPath: ${parent.path}
  anID: ${parent.tagID}
  aTag: ${parent.tag}
  aPathMatch: ${parent.pathMatch}
  anIndex: ${parent.index}
  appPath: $WorkingDirectory()
  relative: '${appPath}/.xdatly/types/custom'
  stepURL: ${aPath}/${state.step}
  stepRule: $LoadJSON('$stepURL/gen.json')
  rule: $LoadJSON('$aPath/gen.json')
  dbDSN: 'dev|mysql|root:dev@tcp(127.0.0.1:3306)/dev${qMark}parseTime=true'
  state.stepURL: $stepURL

pipeline:
  skip: $HasResource('$stepURL/skip.txt')
  printCurrentStep:
    action: print
    message: '-------------- Current step: $stepURL --------------'

  set_sdk:
    action: sdk.set
    target: $target
    sdk: go:1.21

  genRulesTemplate:
    when: ${state.step}=step1_generate
    genRule:
      skip: $HasResource('$stepURL/skip.txt')
      action: exec:run
      description: build datly rule with SQL extension
      target: '$target'
      checkError: true
      commands:
        - mkdir -p ${appPath}/.extension/types/${rule.Path}/dql
        - cp $stepURL/${stepRule.URL} ${appPath}/.extension/dql
        - /tmp/datly gen -o=${stepRule.Method} -s='${appPath}/.extension/dql/${stepRule.URL}' -c='${dbDSN}' -p='${appPath}/.extension' -g='${stepRule.PackageName}'

  addBusinessLogic:
    when: ${state.step}=step2_before_replace
    addLogic:
      skip: $HasResource('$stepURL/skip.txt')
      action: exec:run
      description: build datly rule with SQL extension
      target: '$target'
      checkError: true
      commands:
        - echo 'stepRule -> $stepURL/${stepRule.URL}'
        - cp $stepURL/${stepRule.URL} ${appPath}/.extension/dql
        - mkdir -p ${appPath}/.extension/pkg/${rule.Path}
        - cp $stepURL/.${stepRule.GoFile} ${appPath}/.extension/pkg/${rule.Path}/${stepRule.GoFile}
        - /tmp/datly translate -p='${appPath}/.extension' -s='./dql/${stepRule.URL}' -c='${dbDSN}'


  generatePlugins:
    when: ${state.step}=step3_plugin
    checkSkipEmptyPath:
      skip: $HasResource('$stepURL/skip.txt')
      action: exec:run
      description: build datly rule with SQL extension
      target: '$target'
      checkError: true
      commands:
        - export GO111MODULE=on
        - cp $stepURL/${stepRule.URL} ${appPath}/.extension/dql
        - cp $stepURL/.${stepRule.GoFile} ${appPath}/.extension/pkg/${rule.Path}/${stepRule.GoFile}
        - /tmp/datly translate -p='${appPath}/.extension' -s='./dql/${stepRule.URL}' -c='${dbDSN}'


  runTestsTemplate:
    when: ${state.step}=step4_run_test
    action: run
    init:
      stepURL: $stepURL
    request: '@tests'

